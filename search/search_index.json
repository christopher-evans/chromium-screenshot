{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chromium Screenshot Screenshot service using Chromium and Puppeteer . Getting started To start the server run: 1 2 $ npm i --production $ npm start By default the server will listen on port 8080. To use a different port run: 1 $ npm config set chromium-screenshot:port 40 To build and start the image using Docker : 1 2 $ docker build -t chromium-screenshot . $ docker run -p 40 :8080 chromium-screenshot Routes Any request containing JSON body must have the correct Content-Type header. Images To generate a screenshot make a POST request to /image 1 2 3 4 5 6 7 { url : https://example.com , imageFormat : jpeg , width : 1024 , height : 768 , quality : 100 } The image format must be either jpeg or png . The quality parameter is ignored if png is used. The parameter \"fullPage\": true may be passed to take a screenshot of the full scrollable page, ignoring the width and height parameters. The parameter \"omitBackground\": true may be passed to remove the default white background and capture as transparency in the rendered image. Ping The ping route is a simple GET request to /ping . Logs For easier access the logs can be queried over HTTP. Logs are saved as simple text files so the route should be closed off if the server is public facing. To query the logs make a POST request to /log : 1 2 3 4 5 6 7 8 { from : 2018-01-01T00:00:00.000Z , until : 2018-01-02 , limit : 100 , start : 0 , order : asc , fields : [ level , message , timestamp ] } Any and all of these parameters can be omitted; in general the query should be chosen to limit results to a reasonable size, because the server won't impose a hard limit. Configuration settings There are a number of configurable options for the server that can be set with: 1 $ npm config set chromium-screenshot: setting value Defaults can be found in the package.json file. browser_flags string Space separated flags passed to the chromium instance. A list of available flags can be found here browser_restart_interval integer Interval in ms after which the chromium instance is restarted. If set to zero the same instance will be reused indefinitely, so long as it doesn't crash. log_console_enable boolean Enable logging to the console log_console_level string Only log to console above the provided level (see below for available levels) log_file_enable boolean Enable logging to file log_file_level string Only log to file above the provided level (see below for available levels) log_file_path string Path to log file, either absolute or relative to application route port integer Port to listen for connections reder_cache boolean Enable Chromium browser cache render_timeout integer Time in ms to wait for a page to load (the server will return an error if this is exceeded) render_wait_until string Event or space-separated list of events that should be triggered before the screenshot is taken. Events may include load , domcontentloaded or networkidleX (no more than X network connections for 500ms). route_image string Route for image requests. route_ping string Route for ping requests. route_log string Route for log requests. worker_concurrency integer Number of concurrent workers processing the job queue. Possible log levels are debug , info , notice , warning , error , critical , alert and emergency .","title":"Quick start"},{"location":"#chromium-screenshot","text":"Screenshot service using Chromium and Puppeteer .","title":"Chromium Screenshot"},{"location":"#getting-started","text":"To start the server run: 1 2 $ npm i --production $ npm start By default the server will listen on port 8080. To use a different port run: 1 $ npm config set chromium-screenshot:port 40 To build and start the image using Docker : 1 2 $ docker build -t chromium-screenshot . $ docker run -p 40 :8080 chromium-screenshot","title":"Getting started"},{"location":"#routes","text":"Any request containing JSON body must have the correct Content-Type header.","title":"Routes"},{"location":"#images","text":"To generate a screenshot make a POST request to /image 1 2 3 4 5 6 7 { url : https://example.com , imageFormat : jpeg , width : 1024 , height : 768 , quality : 100 } The image format must be either jpeg or png . The quality parameter is ignored if png is used. The parameter \"fullPage\": true may be passed to take a screenshot of the full scrollable page, ignoring the width and height parameters. The parameter \"omitBackground\": true may be passed to remove the default white background and capture as transparency in the rendered image.","title":"Images"},{"location":"#ping","text":"The ping route is a simple GET request to /ping .","title":"Ping"},{"location":"#logs","text":"For easier access the logs can be queried over HTTP. Logs are saved as simple text files so the route should be closed off if the server is public facing. To query the logs make a POST request to /log : 1 2 3 4 5 6 7 8 { from : 2018-01-01T00:00:00.000Z , until : 2018-01-02 , limit : 100 , start : 0 , order : asc , fields : [ level , message , timestamp ] } Any and all of these parameters can be omitted; in general the query should be chosen to limit results to a reasonable size, because the server won't impose a hard limit.","title":"Logs"},{"location":"#configuration-settings","text":"There are a number of configurable options for the server that can be set with: 1 $ npm config set chromium-screenshot: setting value Defaults can be found in the package.json file. browser_flags string Space separated flags passed to the chromium instance. A list of available flags can be found here browser_restart_interval integer Interval in ms after which the chromium instance is restarted. If set to zero the same instance will be reused indefinitely, so long as it doesn't crash. log_console_enable boolean Enable logging to the console log_console_level string Only log to console above the provided level (see below for available levels) log_file_enable boolean Enable logging to file log_file_level string Only log to file above the provided level (see below for available levels) log_file_path string Path to log file, either absolute or relative to application route port integer Port to listen for connections reder_cache boolean Enable Chromium browser cache render_timeout integer Time in ms to wait for a page to load (the server will return an error if this is exceeded) render_wait_until string Event or space-separated list of events that should be triggered before the screenshot is taken. Events may include load , domcontentloaded or networkidleX (no more than X network connections for 500ms). route_image string Route for image requests. route_ping string Route for ping requests. route_log string Route for log requests. worker_concurrency integer Number of concurrent workers processing the job queue. Possible log levels are debug , info , notice , warning , error , critical , alert and emergency .","title":"Configuration settings"}]}